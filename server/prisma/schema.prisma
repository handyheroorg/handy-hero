generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
  SERVICE_PROVIDER
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  fullName     String
  email        String  @unique
  mobileNumber String
  country      String
  avatar       String?
  role         Role
  password     String

  location Location?
  // Each SERVICE_PROVIDER will have their own profile
  profile  ServiceProviderProfile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  latitude  Float
  longitude Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ExperienceLevel {
  ENTRY
  INTERMEDIATE
  EXPERT
}

model ServiceProviderProfile {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @db.ObjectId

  occupation      String?
  about           String?
  fullAddress     String?
  experienceLevel ExperienceLevel?
  languages       String[]         @default([])
  skills          String[]         @default([])
  education       Json[]           @default([])
  experience      Json[]           @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships ü§ù 
  services Service[]
}

enum ServicePriceType {
  HOURLY
  FIXED
}

model Service {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  profile   ServiceProviderProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String                 @db.ObjectId

  name        String
  description String?
  thumbnail   String?
  skills      String[]

  price     Float
  priceType ServicePriceType
  maxHours  Float? // in case if priceType is HOURLY

  @@index([name, description])
}
